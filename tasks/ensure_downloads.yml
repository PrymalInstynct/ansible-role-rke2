---

- name: Ensure target host architecture information is set as a fact
  ansible.builtin.set_fact:
    rke2_arch: "{{ rke2_arch_lookup[ansible_architecture].arch }}"
    rke2_arch_suffix: "{{ rke2_arch_lookup[ansible_architecture].suffix }}"
  check_mode: false

- name: Ensure URLs are set as facts for downloading binaries
  ansible.builtin.set_fact:
    rke2_binary_url: "{{ rke2_github_download_url }}/{{ rke2_release_version }}/rke2{{ rke2_arch_suffix }}"
    rke2_hash_url: "{{ rke2_github_download_url }}/{{ rke2_release_version }}/sha256sum-{{ rke2_arch }}.txt"
  check_mode: false

- name: Override rke2_binary_url and rke2_hash_url facts for testing specific commit
  ansible.builtin.set_fact:
    rke2_binary_url: "https://storage.googleapis.com/rke2-ci-builds/rke2{{ rke2_arch_suffix }}-{{ rke2_release_version }}"
    rke2_hash_url: "https://storage.googleapis.com/rke2-ci-builds/rke2{{ rke2_arch_suffix }}-{{ rke2_release_version }}.sha256sum"
  when:
    - rke2_release_version | regex_search("^[a-z0-9]{40}$")
  check_mode: false

- name: Ensure the rke2 hashsum is downloaded
  ansible.builtin.uri:
    url: "{{ rke2_hash_url }}"
    return_content: true
  register: rke2_hash_sum_raw
  check_mode: false

- name: Ensure sha256sum is set from hashsum variable
  ansible.builtin.set_fact:
    rke2_hash_sum: "{{ (rke2_hash_sum_raw.content.split('\n') |
      select('search', 'rke2' + rke2_arch_suffix) |
      reject('search', 'images') |
      first).split() | first }}"
  changed_when: false
  check_mode: false

- name: Ensure installation directory exists
  ansible.builtin.file:
    path: "{{ rke2_install_dir }}"
    state: directory
    mode: 0755

- name: Ensure rke2 binary is downloaded
  ansible.builtin.get_url:
    url: "{{ rke2_binary_url }}"
    dest: "{{ rke2_install_dir }}/rke2-{{ rke2_release_version }}"
    checksum: "sha256:{{ rke2_hash_sum }}"
    mode: 0755
  become: "{{ rke2_become }}"
