---

- name: Check that rke2_state is a supported value
  ansible.builtin.assert:
    that:
      - rke2_state in rke2_valid_states
    fail_msg: "rke2_state not valid. Check README.md for details."
    success_msg: "rke2_state is valid."
  when: rke2_state is defined

- name: Check that Ansible v{{ ansible_version.string }} is supported by this role
  ansible.builtin.assert:
    that:
      - ansible_version.string is version_compare(rke2_ansible_min_version, '>=')
    fail_msg: >-
      Ansible v{{ ansible_version.string }} is not supported by this role.
      Please install >= v{{ rke2_ansible_min_version }}.
    success_msg: "Ansible v{{ ansible_version.string }} is supported."
  become: false
  delegate_to: localhost
  run_once: true
  when:
    - not rke2_skip_validation
    - not rke2_skip_env_checks

- name: Check that Python v{{ ansible_python_version }} is supported by this role
  ansible.builtin.assert:
    that:
      - ansible_python_version is version_compare(rke2_python_min_version, '>=')
    fail_msg: >-
      Python v{{ ansible_python_version }} is not supported by this role.
      Please install >= v{{ rke2_python_min_version }}.
    success_msg: "Python v{{ ansible_python_version }} is supported."
  become: false
  delegate_to: localhost
  run_once: true
  when:
    - not rke2_skip_validation
    - not rke2_skip_env_checks

- name: Check that the target init system is supported by this role
  ansible.builtin.assert:
    that:
      - ansible_service_mgr in rke2_supported_init
    fail_msg: >-
      {{ ansible_service_mgr }} is not supported by this role.
      Supported init systems: {{ rke2_supported_init | join(', ') }}
    success_msg: "{{ ansible_service_mgr }} is supported"
  when:
    - not rke2_skip_validation
    - not rke2_skip_env_checks

- name: Determining if {{ ansible_service_mgr }} is actually openrc
  ansible.builtin.stat:
    path: /sbin/openrc-run
  register: rke2_check_openrc_run
  when:
    - rke2_service_handler[ansible_service_mgr] == 'service'
    - not rke2_skip_validation
    - not rke2_skip_env_checks

- name: Check that {{ ansible_service_mgr }} is actually openrc
  ansible.builtin.assert:
    that:
      - rke2_check_openrc_run.stat.exists
    fail_msg: >-
      openrc was not found, cannot install to {{ ansible_service_mgr }}
    success_msg: "openrc found"
  when:
    - rke2_service_handler[ansible_service_mgr] == 'service'
    - not rke2_skip_validation
    - not rke2_skip_env_checks

- name: Run version pre-checks
  ansible.builtin.include_tasks: pre_checks_version.yml
  when:
    - (rke2_release_version is not defined
        or not rke2_release_version
        or rke2_release_version is not regex('\\+rke2[1-9]$'))
    - not rke2_airgap

- name: Run cgroups pre-checks
  ansible.builtin.include_tasks: pre_checks_cgroups.yml
  loop: "{{ rke2_cgroup_subsys }}"
  loop_control:
    loop_var: cgroup
  when:
    - not rke2_skip_validation
    - not rke2_skip_env_checks

- name: Run packages pre-checks
  ansible.builtin.include_tasks: pre_checks_packages.yml
  loop: "{{ rke2_check_packages[rke2_os_distribution_version] }}"
  loop_control:
    loop_var: package
  when:
    - not rke2_skip_validation
    - not rke2_skip_env_checks
    - rke2_check_packages[rke2_os_distribution_version] is defined

- name: Run issue data pre-checks
  ansible.builtin.include_tasks: pre_checks_issue_data.yml
  when:
    - pyratlabs_issue_controller_dump is defined
    - pyratlabs_issue_controller_dump

- name: Run variables pre-checks
  ansible.builtin.import_tasks: pre_checks_variables.yml
  when:
    - not rke2_skip_validation

- name: Ensure experimental variables pre-checks
  ansible.builtin.import_tasks: pre_checks_experimental_variables.yml
  when:
    - not rke2_skip_validation

- name: Run unsupported rootless pre-checks
  ansible.builtin.import_tasks: pre_checks_unsupported_rootless.yml
  when:
    - rke2_runtime_config.rootless is defined
    - rke2_runtime_config.rootless
    - not rke2_skip_validation

- name: Run pre-configuration tasks
  ansible.builtin.import_tasks: ensure_pre_configuration.yml

- name: Run control node count pre-checks
  ansible.builtin.import_tasks: pre_checks_control_node_count.yml
  when:
    - rke2_build_cluster is defined
    - rke2_build_cluster
    - not rke2_skip_validation
